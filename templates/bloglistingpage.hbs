---
{
"stream": {
"$id": "blog-listing-page",
"source": "knowledgeGraph",
"destination": "pages",
"filter": {
"entityTypes": [
"ce_blogdrupalrelated"
]

},
"fields": [
"id",
"uid",
"meta",
"name",
"slug"
],
"localization": {
"locales": ["en"]
}
},
"urlFormat": "blog"
}
---

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>{{name}}</title>
    <meta name="description" content=Category page for {{name}}.>
    {{>head}}

    <link href="https://fonts.googleapis.com/css?family=Work+Sans:200,400&display=swap" rel="stylesheet">
    <style>
        .mobileservice-list {
            display: block;
        }
    </style>

</head>

<body>
    {{>nav}}
    <div class="w-full inline-block py-10">
        <div class="centered-container flex flex-wrap">
            <div class="mobileservice-list w-full md:w-1/3 xl:w-1/6 py-3 md:py-0 pr-0 md:pr-2.5 text-center">
            </div>

            <div class="grid grid-cols-1 sm:grid-cols-2 xl:grid-cols-3 w-full md:w-4/6 xl:w-5/6" id="appenddata"></div>
        </div>
        <div class="contain-pagination"></div>
    </div>

    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    <script>

        $(document).ready(function () {

            //$("#industries").toggle();
            fetch('https://liveapi-sandbox.yext.com/v2/accounts/2679138/entities?api_key=b262ae7768eec3bfa53bfca6d48e4000&v=20160822&entityTypes=ce_marketingBlog').then((industricsdata) => {
                console.log(industricsdata);
                return industricsdata.json();
            }).then((dataindustrics) => {

                let industricsdata11 = "";
                dataindustrics.response.entities.map((values) => {

                    industricsdata11 += `<div class="blog px-4 mb-8"><div class="blog-img relative h-0 pt-[57%]"><img src="${values.photoGallery[0].image.url} " alt="" class="object-cover w-full h-full absolute top-0 left-0"></div><div class="blog-content"><a href="${values.slug}" class="product-name">${values.name}</a> <p class="product-desp">${values.shortDescription} </p>
                    <a href="${values.slug}" class="read-more">${values.c_arrivalButton} <i class="fa fa-angle-double-right"></i></a>
                    </div> </div> `;
                });
                document.getElementById('appenddata').innerHTML = industricsdata11;

            }).catch((err) => {
                console.log(err);
            });

        })

        function paginate(totalItems, currentPage, pageSize, maxPages) {
            if (currentPage === void 0) { currentPage = 1; }
            if (pageSize === void 0) { pageSize = 10; }
            if (maxPages === void 0) { maxPages = 10; }
            // calculate total pages
            var totalPages = Math.ceil(totalItems / pageSize);
            // ensure current page isn't out of range
            if (currentPage < 1) {
                currentPage = 1;
            }
            else if (currentPage > totalPages) {
                currentPage = totalPages;
            }
            var startPage, endPage;
            if (totalPages <= maxPages) {
                // total pages less than max so show all pages
                startPage = 1;
                endPage = totalPages;
            }
            else {
                // total pages more than max so calculate start and end pages
                var maxPagesBeforeCurrentPage = Math.floor(maxPages / 2);
                var maxPagesAfterCurrentPage = Math.ceil(maxPages / 2) - 1;
                if (currentPage <= maxPagesBeforeCurrentPage) {
                    // current page near the start
                    startPage = 1;
                    endPage = maxPages;
                }
                else if (currentPage + maxPagesAfterCurrentPage >= totalPages) {
                    // current page near the end
                    startPage = totalPages - maxPages + 1;
                    endPage = totalPages;
                }
                else {
                    // current page somewhere in the middle
                    startPage = currentPage - maxPagesBeforeCurrentPage;
                    endPage = currentPage + maxPagesAfterCurrentPage;
                }
            }
            // calculate start and end item indexes
            var startIndex = (currentPage - 1) * pageSize;
            var endIndex = Math.min(startIndex + pageSize - 1, totalItems - 1);
            // create an array of pages to ng-repeat in the pager control
            var pages = Array.from(Array((endPage + 1) - startPage).keys()).map(function (i) { return startPage + i; });
            // return object with all pager properties required by the view
            return {
                totalItems: totalItems,
                currentPage: currentPage,
                pageSize: pageSize,
                totalPages: totalPages,
                startPage: startPage,
                endPage: endPage,
                startIndex: startIndex,
                endIndex: endIndex,
                pages: pages
            };
        }

        function appendpaginationlinks(pagesLinks) {

            // console.log('pagesLinks', pagesLinks)
            const pages = pagesLinks.pages;
            const totalPages = pagesLinks.totalPages;
            const currentPage = pagesLinks.currentPage;
            if (pages.length > 1) {
                var pagehtml = "<div class='flex-inline'>";
                pagehtml += "<ul class='pagination  relative z-0 flex flex-wrap items-center justify-center'>";

                // if(currentPage>1){
                //   pagehtml+='<li><a href="#" class="page-btn relative inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50 mr-3" data-id="1">First</a></li>';
                // }

                if (currentPage > 1) {
                    pagehtml += '<li class="m-1"><a href="#" class="page-btn relative inline-flex items-center px-4 py-2 rounded-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50" data-id="1">First</a></li>';
                    pagehtml += '<li class="m-1"><a href="#" class="page-btn relative inline-flex items-center px-4 py-2 rounded-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50" data-id=' + (currentPage - 1) + '><</a></li>';
                }

                pages.forEach((e) => {
                    var isActive = "";
                    if (e == currentPage) {
                        isActive = "active";
                    }
                    pagehtml += '<li class="m-1"><a href="#" class="' + isActive + ' page-btn relative inline-flex items-center px-4 py-2 rounded-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50" data-id=' + e + '>' + e + '</a></li>';

                })

                if (totalPages !== currentPage) {
                    pagehtml += '<li class="m-1"><a href="#" class="page-btn relative inline-flex items-center px-4 py-2 rounded-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50"  data-id=' + (currentPage + 1) + '>></a></li>';
                    pagehtml += '<li class="m-1"><a href="#" class="page-btn relative inline-flex items-center px-4 py-2 rounded-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50" data-id=' + totalPages + '>Last</a></li>';
                }

                pagehtml += "</ul></div>";
            }
            else {
                pagehtml = "";
            }

            $(".contain-pagination").empty();
            $('.contain-pagination').append(pagehtml);
        }
        function renderPaginationLinks(pagesLinks, count = 0) {
            appendpaginationlinks(pagesLinks);

            setTimeout(() => {

                $(document).on('click', '.page-btn', function () {
                    const dataId = $(this).attr('data-id');
                    const newOffset = (limit * Number(dataId)) - (limit);
                    offset = newOffset;
                    // alert(offset)
                    //getData(offset, false);
                    // getLocations(offset, false);
                    digitalmarketing(newOffset, false);
                    experientialmarketing(newOffset, false);
                    fieldmarketing(newOffset, false);
                    // getLocations(newOffset, false);
                    const pagLinks = paginate(count, parseInt(dataId), limit, 5);
                    appendpaginationlinks(pagLinks);
                });

            }, 1000);
        }

        var liveAPIKey = "b262ae7768eec3bfa53bfca6d48e4000"
        var entityTypes = "ce_marketingBlog"
        let offset = 0;
        const limit = 1;




        function getRequest(request_url, isPagingnation = false) {

            request_url += "&api_key=" + liveAPIKey;
            request_url += "&v=" + "20181017";

            if (entityTypes) {
                request_url += "&entityTypes=" + entityTypes;
            }

            fetch(request_url).then(response => response.json()).then(result => {
                let count = result.response.count;
                const limit = 1;
                //alert(limit);
                var html = '';
                $.each(result.response.entities, function (index, entity) {
                    //html += '<div class="form-check relative"> <img class="rounded-xl object-contain sm:h-60 md:h-76" src=' + entity.image.url +'> '+ entity.photoGallery + '</div>'
                    html += '<div class="blog px-4 mb-8">'
                    html += '<div class="blog-img relative h-0 pt-[57%]"><img src=' + entity.photoGallery[0].image.url + ' alt="" class=" object-cover w-full h-full absolute top-0 left-0"></div>'
                    html += '<div class="blog-content"><a class="product-name"  href =' + entity.slug + ' > ' + entity.name + '</a>';
                    html += '<p class="product-desp" for="' + entity.shortDescription + '"  > ' + entity.shortDescription + '</p>'
                    html += '<a class="read-more"  href =' + entity.slug + ' > ' + entity.c_arrivalButton + ' <i class="fa fa-angle-double-right"></i>' + '</a></div>';
                    html += '</div>'

                });

                $("#appenddata").html(html);
                const pagLinks = paginate(count, 1, limit, 4);
                if (isPagingnation) { renderPaginationLinks(pagLinks, count) }

                else {

                }

            });
        }





        //getLocations();

        function getDepartments() {
            var baseURL = "https://liveapi-sandbox.yext.com/v2/accounts/me/entities?";
            var api_key = "b262ae7768eec3bfa53bfca6d48e4000";
            var vparam = "20181017";
            var entityTypes = "ce_blogdrupalrelated";

            var fullURL =
                baseURL +
                "api_key=" +
                api_key +
                "&v=" +
                vparam +
                "&entityTypes=" +
                entityTypes;


            fetch(fullURL).then(response => response.json()).then(result => {

                if (!result.errors) {
                    if (result.response.count > 0) {

                        var html = '';
                        $.each(result.response.entities, function (index, entity) {
                            html += '<button class="filter-btn" id="' + entity.meta.id + '">' + entity.name + '</button>';
                        });

                        $(".mobileservice-list").html(html);



                    } else {

                    }

                } else {

                }

            });
        }
        getDepartments();

        function digitalmarketing(offset = 0, pagination = false) {
            var newVar = $('#digital-marketing').text();
            let request_url =
                "https://liveapi-sandbox.yext.com/v2/accounts/me/entities?" +
                "entities" +
                "&limit=1" +
                "&offset=" + offset;
            '&sortBy=[{"name":"ASCENDING"}]';
            let filterAndNew = {};
            let filterParametersNew = {};
            if (newVar) {
                filterAndNew = {
                    "$and":
                        [
                            {
                                "c_nature": { "$contains": newVar }
                            }
                        ],
                };
            }


            filterParametersNew = { ...filterAndNew };
            var filterpar = JSON.stringify(filterParametersNew);
            var filter = encodeURI(filterpar);

            if (filter) {
                //alert(filter);
                request_url += "&filter=" + filter;
            }

            getRequest(request_url, pagination);



            //Filter code ends here

        }


        function experientialmarketing(offset = 0, pagination = false) {

            var newVar2 = $('#experiential-marketing').text();
            //Filter code starts from here
            let request_url =
                "https://liveapi-sandbox.yext.com/v2/accounts/me/entities?" +
                "entities" +
                "&limit=1" +
                "&offset=" + offset;
            '&sortBy=[{"name":"ASCENDING"}]';
            let filterAndNew = {};
            let filterParametersNew = {};
            if (newVar2) {
                filterAndNew = {
                    "$and":
                        [
                            {
                                "c_nature": { "$contains": newVar2 }
                            }
                        ],
                };
            }


            filterParametersNew = { ...filterAndNew };
            var filterpar = JSON.stringify(filterParametersNew);
            var filter = encodeURI(filterpar);

            if (filter) {
                ///alert(filter);
                request_url += "&filter=" + filter;
            }

            getRequest(request_url, pagination);



            //Filter code ends here

        }
        function fieldmarketing(offset = 0, pagination = false) {

            var newVar1 = $('#field-marketing').text();
            //Filter code starts from here
            let request_url =
                "https://liveapi-sandbox.yext.com/v2/accounts/me/entities?" +
                "entities" +
                "&limit=1" +
                "&offset=" + offset;
            '&sortBy=[{"name":"ASCENDING"}]';
            let filterAndNew = {};
            let filterParametersNew = {};
            if (newVar1) {
                filterAndNew = {
                    "$and":
                        [
                            {
                                "c_nature": { "$contains": newVar1 }
                            }
                        ],
                };
            }


            filterParametersNew = { ...filterAndNew };
            var filterpar = JSON.stringify(filterParametersNew);
            var filter = encodeURI(filterpar);

            if (filter) {
                //alert(filter);
                request_url += "&filter=" + filter;
            }

            getRequest(request_url, pagination);



            //Filter code ends here
        }


        $(document).on('click', '#digital-marketing', function () {
            digitalmarketing(0, true);
        })
        $(document).on('click', '#experiential-marketing', function () {
            experientialmarketing(0, true);
        })

        $(document).on('click', '#field-marketing', function () {

            fieldmarketing(0, true);
        })

    </script>


    {{>footer}}

</body>

</html>
